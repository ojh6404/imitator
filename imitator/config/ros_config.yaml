ros:
  rate: 10
  action_type: "end_effector" # end_effector (x,y,z,r,p,y), angle_vector (seq of joint angle)
  joints: ["test"]
  message_filters:
    slop: 0.1
    queue_size: 1000

obs: # input into policy
  image:
    modality: "ImageModality"
    topic_name: "/kinect_head/rgb/image_rect_color/compressed"
    msg_type: "CompressedImage"
    normalize: False
    obs_encoder:
      model: "VariationalAutoEncoder"
      model_kwargs:
        input_size: [224, 224]
        input_channel: 3
        latent_dim: 32
        # normalization: "BatchNorm2d"
        # output_activation: "Sigmoid"
      model_path: null
      pretrained: True
      input_dim: [224, 224, 3]
      layer_dims: null
      output_dim: 32
      has_decoder: True
      freeze: True
  robot_ee_pos:
    modality: "FloatVectorModality"
    topic_name: "/eus_imitation/robot_state"
    msg_type: "Float32MultiArrayStamped"
    normalize: True
    obs_encoder:
      input_dim: 4
      output_dim: 4
      layer_dims: null
      activation: "ReLU" # [ReLU, Tanh...]
actions:
  modality: "FloatVectorModality"
  topic_name: "/eus_imitation/robot_action"
  msg_type: "Float32MultiArrayStamped"
  dim: 4
  normalize: True

network:
  policy:
    model: "RNNActor"
    model_path: null
    rnn:
      type: "LSTM"
      rnn_num_layers: 2
      rnn_hidden_dim: 400
      seq_length: 20
    mlp_layer_dims: [128, 128, 128]
    mlp_activation: "ReLU"
    train:
      lr: 1e-4
      lr_scheduler: True
      optimizer: "Adam"
      grad_pen: 0.1
      batch_size: 128
      seq_length: 10 # equal to rnn seq_length if RNNActor
      weight:
        l1: 0.0
        l2: 1.0

dataset:
  dataset_keys: ["actions"]
  load_next_obs: True
  frame_stack: 1
  pad_frame_stack: True
  pad_seq_length: True
  get_pad_mask: False
  goal_mode: null
  hdf5_cache_mode: null # null, "all"
  hdf5_use_swmr: True
